apiVersion: v1
kind: Template
metadata:
  name: spring-boot-cache-greeting
  annotations:
    iconClass: icon-spring
    tags: spring-boot, cache, java, microservice
    openshift.io/display-name: Spring Boot - Cache Greeting Service
    openshift.io/provider-display-name: "Red Hat, Inc."
    openshift.io/documentation-url: "https://appdev.prod-preview.openshift.io/docs/spring-boot-runtime.html#mission-cache-spring-boot"
    description: >-
      The Cache Service Mission demonstrates caching with Infinispan.
parameters:
- name: RUNTIME_VERSION
  displayName: OpenJDK 8 image version to use
  description: Specifies which version of the OpenShift OpenJDK 8 image to use
  value: 1.3-8
  required: true
- name: SOURCE_REPOSITORY_URL
  description: The source URL for the application
  displayName: Source URL
  required: true
- name: SOURCE_REPOSITORY_REF
  description: The branch name for the application
  displayName: Source Branch
  value: master
  required: true
- name: SOURCE_REPOSITORY_DIR
  description: The location within the source repo of the application
  displayName: Source Directory
  value: .
  required: true
- name: ARTIFACT_COPY_ARGS
  description: Syntax to be used to copy uberjar files to the target directory
  displayName: Copy Args
  value: '*-exec.jar'
  required: true
- name: GITHUB_WEBHOOK_SECRET
  description: A secret string used to configure the GitHub webhook.
  displayName: GitHub Webhook Secret
  required: true
  from: '[a-zA-Z0-9]{40}'
  generate: expression
- name: MAVEN_MIRROR_URL
  description: Maven Nexus Repository to be used during build phase
  displayName:
  required: false
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: spring-boot-cache-greeting
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: runtime-greeting
  spec:
    tags:
    - name: "${RUNTIME_VERSION}"
      from:
        kind: DockerImage
        name: registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift:${RUNTIME_VERSION}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: spring-boot-cache-greeting
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: spring-boot-cache-greeting:BOOSTER_VERSION
    postCommit: {}
    resources: {}
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: runtime-greeting:${RUNTIME_VERSION}
        incremental: true
        env:
        - name: MAVEN_ARGS_APPEND
          value: "-pl ${SOURCE_REPOSITORY_DIR}"
        - name: ARTIFACT_DIR
          value: "${SOURCE_REPOSITORY_DIR}/target"
        - name: MAVEN_MIRROR_URL
          value: "${MAVEN_MIRROR_URL}"
        - name: ARTIFACT_COPY_ARGS
          value: "${ARTIFACT_COPY_ARGS}"
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spring-boot-cache-greeting
      provider: snowdrop
      version: "BOOSTER_VERSION"
      group: io.openshift.booster
    name: spring-boot-cache-greeting
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: spring-boot-cache-greeting
      provider: snowdrop
      group: io.openshift.booster
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: spring-boot-cache-greeting
      provider: snowdrop
      version: "BOOSTER_VERSION"
      group: io.openshift.booster
    name: spring-boot-cache-greeting
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: spring-boot-cache-greeting
      provider: snowdrop
      group: io.openshift.booster
    strategy:
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        labels:
          app: spring-boot-cache-greeting
          provider: snowdrop
          version: "BOOSTER_VERSION"
          group: io.openshift.booster
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: spring-boot-cache-greeting:BOOSTER_VERSION
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - spring-boot
        from:
          kind: ImageStreamTag
          name: spring-boot-cache-greeting:BOOSTER_VERSION
      type: ImageChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: spring-boot-cache-greeting
      provider: snowdrop
      version: "BOOSTER_VERSION"
      group: io.openshift.booster
    name: spring-boot-cache-greeting
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: spring-boot-cache-greeting
